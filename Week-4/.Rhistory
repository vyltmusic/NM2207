# Load package tidyverse
library(tidyverse)
# Read data from the hotels.csv file and assign it to a variable named, "hotels"
hotels <- read_csv("hotels.csv")
# Enter code here
names(hotels)
# Enter code here
glimpse(hotels)
# Enter code here
select(hotels, lead_time)
# Enter code here
select(hotels, lead_time, agent, market_segment)
# Enter code here
arrange(hotels, lead_time)
# Enter code here
arrange(hotels, desc(lead_time))
# Enter code here
arrange(select(hotels, lead_time), desc(lead_time))
# Enter code here
hotels %>%
select(lead_time) %>%
arrange(desc(lead_time))
# Enter code here
hotels %>%
filter(children >=1) %>%
select(hotel, children)
# Enter code here
hotels %>%
filter(children >=1, hotel == "City Hotel") %>%
select(hotel, children)
# Enter code here
hotels %>% slice(1:5)
# Enter code here
hotels %>%
slice(1,3,5)
# Enter code here
hotels %>%
distinct(hotel)
?distinct()
?distinct()
?distinct(hotels)
?distinct(hotels, hotel, lead_time)
distinct(hotels, hotel, lead_time)
distinct(hotels, hotel)
# Enter code here
hotels %>%
distinct(hotel)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
select(hotel, little_ones,children,babies)
# Enter code here
hotels %>%
mutate(little_ones = children + babies,
average_little_ones = mean(little_ones)) %>%
select(hotel, little_ones,children,babies, average_little_ones)
# Enter code here
hotels %>%
count(market_segment)
# Enter code here
hotels %>%
count(market_segment, sort = TRUE)
# Enter code here
hotels %>%
count(hotel, market_segment)
# Enter code here
hotels %>%
summarise(mean_adr = mean(adr))
# Enter code here
hotels %>%
summarise(mean_adr = mean(adr))
# Enter code here
hotels %>%
group_by(hotel) %>%
summarise(mean_adr = mean(adr))
# Enter code here
hotels %>%
group_by(hotel) %>%
summarise(count = n())
# Enter code here
hotels %>%
summarise(
min_adr = min(adr),
mean_adr = mean(adr),
median_adr = median(adr),
max_adr = max(adr)
)
# Enter code here
hotels %>%
select(hotel, lead_time) %>%
slice(1:5) %>%
arrange(lead_time)
# Enter code here
hotels %>%
select(hotel, lead_time) %>%
arrange(lead_time) %>%
slice(1:5)
# Enter code here
hotels %>%
filter(hotel == "City Hotel")
# Enter code here
hotels %>%
filter( adults == 1, children >= 1 | babies >=1) %>%
select(adults, babies, children)
# Enter code here
hotels %>%
count(market_segment) %>%
arrange(desc(n))
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
select(children, babies, little_ones) %>%
arrange(desc(little_ones))
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
filter(
little_ones >= 1,
hotel == "Resort Hotel"
) %>%
select(hotel, little_ones)
# Enter code here
hotels %>%
mutate(little_ones = children + babies) %>%
filter(little_ones >= 1, hotel == "Resort Hotel") %>%
select(hotel, little_ones)
setwd("~/R/NM2207/Week-4")
knitr::opts_chunk$set(echo = TRUE)
# Enter code here
comm_data <- read_csv("CommQuest2023_Larger.csv")
# Enter code here
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
select(comm_data, date, channel, message)
# Enter code here
library(tidyverse)
comm_data <- read.csv("CommQuest2023_Larger.csv")
# Enter code here
select(comm_data, date, channel, message)
# Enter code here
filter(comm_data, channel = "Twitter", date = 2023-08-02)
# Enter code here
filter(comm_data, channel == "Twitter", date == 2023-08-02)
# Enter code here
filter(comm_data, channel == "Twitter", date == "2023-08-02")
# Enter code here
filter(comm_data, channel == "Twitter", date == "2023-08-02")
# Enter code here
arrange(comm_data, date)
# Enter code here
unique(comm_date, sender)
# Enter code here
unique(comm_data, sender)
# Enter code here
distinct(comm_data, sender)
# Enter code here
comm_data %>%
group_by(sender) %>%
count()
# Enter code here
comm_data %>%
group_by(sender) %>%
count()
# Enter code here
comm_data %>%
group_by(channel) %>%
count()
# Enter code here
comm_data %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment)) %>%
select(sender, sentiment) %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment)) %>%
select(sender, sentiment
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment)) %>%
select(sender, sentiment)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment)) %>%
select(sender, sentiment, sent_avg)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sent_avg)) %>%
select(sender, sentiment, sent_avg)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sent_avg)) %>%
select(sender, sent_avg)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sent_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sent_avg)) %>%
select(sender, sent_avg) %>%
unique()
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique() %>%
slice(1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique() %>%
slice(1:3)
# Enter code here
slice(comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique(), 1:3)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique()
# Enter code here
(comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique())[1:3]
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique()
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment_avg > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique()
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(avg_sentiment_score = mean(sentiment))
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message)
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message, sentiment)
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message)
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment < 0 ~ 'Negative',
sentiment > 0 ~ 'Positive',
TRUE ~ 'Neutral'))
# Enter code here
comm_data %>%
mutate(product = sentiment + nchar(message)) %>%
arrange(desc(product))
# Enter code here
comm_data %>%
mutate(product = sentiment * nchar(message)) %>%
arrange(desc(product))
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(messages))) %>%
arrange(total_char)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(total_char)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char))
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(total_char = sum(nchar(message))) %>%
arrange(desc(total_char)) %>%
slice(1)
# Enter code here
comm_data %>%
group_by(sender) %>%
mutate(sentiment_avg = mean(sentiment)) %>%
filter(sentiment_avg > 0) %>%
arrange(desc(sentiment_avg)) %>%
select(sender, sentiment_avg) %>%
unique() %>%
slice(1:3)
# Enter code here
select(comm_data, date, channel, message) %>%
head()
# Enter code here
filter(comm_data, channel == "Twitter", date == "2023-08-02") %>%
head()
# Enter code here
distinct(comm_data, sender)
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(avg_sentiment_score = mean(sentiment)) %>%
head()
# Enter code here
comm_data %>%
group_by(date) %>%
summarise(avg_sentiment_score = mean(sentiment))
# Enter code here
comm_data %>%
filter(sentiment < 0) %>%
select(message) %>%
head()
# Enter code here
comm_data %>%
mutate(sentiment_label = case_when(
sentiment < 0 ~ 'Negative',
sentiment > 0 ~ 'Positive',
TRUE ~ 'Neutral')) %>%
head()
# Enter code here
comm_data %>%
mutate(product = sentiment * nchar(message)) %>%
arrange(desc(product)) %>%
head()
