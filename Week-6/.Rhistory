knitr::opts_chunk$set(echo = TRUE)
# Enter code here
for (x in c(3, 6, 9)) {
print(x)
}
# Left-hand side code: for loop for passing values
for (x in 1:8) {print(x)}
}
print(y[x]}
```{r, eval=TRUE,echo=TRUE}
# Right-hand side code: for loop for passing indices
for (x in 1:8){y <- seq(from=100,to=200,by=5)
print(y[x]}
# Right-hand side code: for loop for passing indices
for (x in 1:8){y <- seq(from=100,to=200,by=5)
print(y[x]}
# Right-hand side code: for loop for passing indices
for (x in 1:8){
y <- seq(from=100,to=200,by=5)
print(y[x])
}
# Left-hand side code: for loop for passing values
for (x in 1:8) {print(x)}
# Enter code here
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[i] <- mean(rnorm(sample_sizes[i]))
}
sample_means
seq_along(sample_sizes)
?seq_along
# Enter code here
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[i] <- mean(rnorm(sample_sizes[i]))
}
sample_means
double(length(sample_sizes))
?double()
length(sample_sizes)
double(length(sample_sizes))
length(sample_sizes)
# Enter code here
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_means <- double(length(sample_sizes))
for (i in seq_along(sample_sizes)) {
sample_means[i] <- mean(rnorm(sample_sizes[i]))
}
sample_means
# Example 3 for data_type=double
sample_means <- rep(0, length(sample_sizes))
# Example 3 for data_type=double
sample_means <- rep(0, length(sample_sizes))
sample_means
# Initialisation of data_list
data_list <- vector("list", length = 5)
data_list
for (i in seq_along(a)) {
out[i] <- a[i] + b[i]
}
# Example: bad idea!
a <- 7:11
b <- 8:12
out <- rep(0L, 5)
for (i in seq_along(a)) {
out[i] <- a[i] + b[i]
}
out
# Taking advantage of vectorization
a <- 7:11
b <- 8:12
out <- a + b
out
# Slide 23
sample_sizes <- c(5, 10, 15, 20, 25000)
sample_summary <- function(sample_sizes, fun) {
out <- vector("double", length(sample_sizes))
for (i in seq_along(sample_sizes)) {
out[i] <- fun(rnorm(sample_sizes[i]))
}
return(out)
}
# Slide 24
#Compute mean
sample_summary(sample_sizes,mean)
# Compute median
sample_summary(sample_sizes,median)
# Compute sd
sample_summary(sample_sizes,sd)
# Left-hand side code: for loop
for(i in 1:5){
print(i)
}
# Right-hand side code: while loop
i <- 1
while (i <= 5) {
# body
print(i)
i <- i + 1
}
knitr::opts_chunk$set(echo = TRUE)
a
d
a
b
# Enter code here
countdown <- 10
while(countdown > 0){
cat(countdown)
Sys.sleep(1)
countdown <- countdown - 1
}
# Enter code here
countdown <- 10
while(countdown > 0){
cat(countdown, "... ")
Sys.sleep(1)
countdown <- countdown - 1
}
# Enter code here
countdown <- 10
while(countdown > 0){
cat(countdown, "...")
Sys.sleep(1)
countdown <- countdown - 1
}
cat("Blastoff!")
# Enter code here
countdown <- 10
while(countdown > 0){
cat(countdown, "... ", sep = "")
Sys.sleep(1)
countdown <- countdown - 1
}
cat("Blastoff!")
output <- ""
# Enter code here
function(input){
output <- ""
for(i in 1:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
# Enter code here
reverse <- function(input){
output <- ""
for(i in 1:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
reverse("hello")
# Enter code here
reverse <- function(input){
output <- ""
for(i in 0:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
reverse("hello")
# Enter code here
reverse <- function(input){
for(i in 0:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
reverse("hello")
# Enter code here
reverse <- function(input){
for(i in 0:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
reverse("hello")
# Enter code here
reverse <- function(input){
for(i in 0:nchar(input)){
output <- paste(output, substr(input,nchar(input)-i,nchar(input)-i))
}
print(output)
}
reverse("was it a car or a cat i saw")
